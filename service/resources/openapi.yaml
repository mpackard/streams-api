openapi: "3.0.2"

info:
  title: "Streams API"
  description: "Manage Tapis Streams API."
  version: "1"
  termsOfService: "https://tapis-project.org"
  contact:
    name: "Streams API"
    url: "https://tapis-project.org"
    email: "cicsupport@tacc.utexas.edu"
  license:
    name: "BSD 3"
    url: "https://github.com/tapis-project/streams-api"

servers:
- url: http://localhost:5000
  description: Local Development
- url: http://localhost:5001
  description: Local Development II


paths:
  /sites:
    get:
      tags:
      - Sites
      summary: Get sites.
      description: Get sites
      operationId: get_sites
      responses:
        '200':
          description: Get sites
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BasicResponse'
                properties:
                  result:
                    type: array
                    items:
                      allOf:
                         - $ref: '#/components/schemas/BasicResult'
                         - $ref: '#/components/schemas/GeoLocation'



    post:
      tags:
      - Tokens
      summary: Create site.
      description: Create site.
      operationId: create_site
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTokenRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BasicResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/NewTokenResponse'


    put:
      tags:
      - Tokens
      summary: Generate a new token from a refresh token.
      description: Generate a new token from a refresh token.
      operationId: refresh_token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BasicResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/NewTokenResponse'



components:
  schemas:
    BasicResponse:
      type: object
      properties:
        version:
          type: string
          description: Version of the API
        message:
          type: string
          description: Brief description of the response
        status:
          type: string
          description: Whether the request was a success or failure.
          enum: [success, failure]
          
    BasicResult:
      type: object
      properties:
        resource_name:
          type: string
          description: Name of the resource.
        resource_id:
          type: string
          description: Id of the resource.
        resource_owner:
          type: string
          description: Owner of the resource
        resource_type:
          type: string
          description: Type of the resource
       
        
    SiteInfo:
      type: object
      properties:
        version:
          type: string
          description: Version of the API
        message:
          type: string
          description: Brief description of the response
        status:
          type: string
          description: Whether the request was a success or failure.
          enum: [success, failure]
  
    GeoLocation: 
      type: object
      properties:
          long: 
              type: number
              description: longitude
          lat:
              type: number
              description: latitude
          elv:
              type: number
              description: elevation 
              
    NewTokenRequest:
      type: object
      properties:
        token_type:
          type: string
          enum: [user, service]
          description: Type of token (user or service) to generated.
        token_tenant_id:
          type: string
          description: The tenant associated with the token to be generated.
        token_username:
          type: string
          description: The username associated with the token to be generated.
        delegation_token:
          type: boolean
          description: Whether the generated token should be a delegation token.
        access_token_ttl:
          type: integer
          description: The TTL, in seconds, for the generated token.
        generate_refresh_token:
          type: boolean
          description: Whether to also generate a refresh token.
        refresh_token_ttl:
          type: integer
          description: The TTL, in seconds, for the refresh token (if generated).
        claims:
          type: object
          description: JSON object of additional claims to add to the standard claims issued with the token. Note - standard claims cannot be modified through this parameter.
      required: [token_type, token_tenant_id, token_username]

    
    RefreshTokenRequest:
      type: object
      properties:
        refresh_token:
          type: string
          description: The refresh token being used to get a new access token.
