openapi: "3.0.2"

info:
  title: "Streams API"
  description: "Manage Tapis Streams API."
  version: "1"
  termsOfService: "https://tapis-project.org"
  contact:
    name: "Streams API"
    url: "https://tapis-project.org"
    email: "cicsupport@tacc.utexas.edu"
  license:
    name: "BSD 3"
    url: "https://github.com/tapis-project/streams-api"

servers:
- url: http://localhost:5000
  description: Local Development
- url: http://localhost:5001
  description: Local Development II


paths:
  /sites:
    get:
      tags:
      - Sites
      summary: Get sites.
      description: Get sites.
      operationId: get_sites
      x-swagger-router-controller: connexContr
      parameters:
      - name: limit
        in: query
        description: limit the number of records returned.
        schema:
          type: integer
      - name: offset
        in: query
        description: index (offset) to start list.
        schema:
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BasicResponse'
                properties:
                  result:
                    type: array
                    items:
                      allOf:
                         - $ref: '#/components/schemas/BasicResult'
                         - $ref: '#/components/schemas/GeoLocation'



    post:
      tags:
      - Sites
      summary: Create a site.
      description: Create a site.
      operationId: create_site
      x-swagger-router-controller: connexContr
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSite'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BasicResponse'
                properties:
                 result:
                    type: array
                    items:
                      allOf:
                         - $ref: '#/components/schemas/SiteInfo'
                         - $ref: '#/components/schemas/GeoLocation'

components:
  schemas:
    BasicResponse:
      type: object
      properties:
        version:
          type: string
          description: Version of the API
        message:
          type: string
          description: Brief description of the response
        status:
          type: string
          description: Whether the request was a success or failure.
          enum: [success, failure]
          
    BasicResult:
      type: object
      properties:
        resource_name:
          type: string
          description: Name of the resource.
        resource_id:
          type: string
          description: Id of the resource.
        resource_owner:
          type: string
          description: Owner of the resource
        resource_type:
          type: string
          description: Type of the resource
       
        
    SiteInfo:
      type: object
      properties:
        name:
          type: string
          description: Site name
        site_id:
          type: string
          description: The unique identifier for site
        owner:
          type: string
          description: The owner for site
        resource_type:
          type: string
          description: The typ of resource.
          enum: [site]
  
    GeoLocation: 
      type: object
      properties:
          longitude: 
              type: number
              description: longitude
          latitude:
              type: number
              description: latitude
          elevation:
              type: number
              description: elevation 
              
    NewSite:
      type: object
      properties:
        site_id:
          type: string
          pattern: "^[a-zA-Z0-9-]*$"
          description: The unique identifier for the tenant.
        resource_type:
          type: string
          enum: [site]
          description: Type of resource(site) to be generated.
        site_name:
          type: string
          description: Resource name.
        lat:
          type: number
          description: Latitude of site.
        lon:
          type: number
          description: Longitude of site.
        elevation:
          type: number
          description: Elevation of site.
      required: [resource_type, site_name, lat, lon, elevation]

    
   